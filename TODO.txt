------------------------------
Small GUI improvements
------------------------------
Allow for changing of Nicknames of Stats/Skills.

Have some GUI method for modifying resistances.

Improve saved character text file appearance
  Add visual spaces between the different sections

Have Ctrl-N,O,S start New, Open, and Save commands.

Add "Unsaved, are you sure?" dialogs to "New", "Open", and "Exit" menus.



-----------------------------
Larger GUI improvements
-----------------------------

Allow for changing of parent skills of Stats/Skills.
  Click/drag to reassign skill parent.
  Retype stat parents to modify

Have explicit "Fudge-factor mode" and "Normal mode"
  In Normal mode, cannot adjust things that should not be adjustable.
    No changing of stat values other than through levelling up.
    No changing of skill ranks other than through levelling up.
    No changing of potential stat value whatsoever.
  In "Fudge-factor mode" ("GM Mode"?), can adjust any value however you feel like it.


-----------------------------
Small Backend improvements
-----------------------------

Modified syntax for locating relatives.
  'Parent Skill/Child Skill', with 'Parent Skill/' being optional.
  Avoids ambiguity of 'Riding/Horse' with 'Animal Handling/Horse'

Fix reading of Miscellaneous values when empty.
  Currently, makes a Value with no options, instead of making a default emptystring for the names.

Have each value type automatically add the type into the Options list if not specified.
  Otherwise, when saving, then reloading, guaranteed that values won't be lost.

Add a "Disabled" parameter to items,
  allowing for item-bonuses to be temporarily disabled.
  This could be used, for example, if an item is broken, but can be repaired.



-----------------------------
Moderate Backend improvements
-----------------------------

Inventory
  Implement multiplicative bonuses

Add syntax to have runtime-specified skill bonus on a per-skill basis.
  Add a tag "Progression-filename.txt" in the options.
  Make Character have a defaultdict of str->Table.
  On unknown skill progression, attempt to load new table from file.
  This will allow for using RMFRP skill progressions, which vary per-skill


----------------------------
Larger Backend improvements
----------------------------

Make Character.DPallowed and Character.StatPointsAllowed be configurable for multiple rules.

Make the stat increase scheme be configurable.

Removing a bonus from an item does not update skills that were children, but are no longer.
  Ex. "Dagger+5, Linguistics-2" becomes "Dagger+5" would not remove the -2 from Linguistics.
  Fix this.


---------------------------
Improving tree structure
---------------------------
Currently, Character holds a list of parent-child tuples, which defines a tree structure.
Finding children and finding parents are then slow operations.
In addition, the adding or removing of values is tedious.
At some point, it should be replaced with an actual tree class that better handles the building and using of the tree.
